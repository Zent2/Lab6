/*
 * File:   mainc.c
 * Author: Christian Campos 21760
 *
 * Created on 24 de marzo de 2023, 12:12 AM
 */

// PIC16F887 Configuration Bit Settings

// 'C' source line config statements

// CONFIG1
#pragma config FOSC = INTRC_NOCLKOUT// Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = OFF      // RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = OFF       // Internal External Switchover bit (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _tmr0_value 200
#define _XTAL_FREQ 8000000
void __interrupt () isr (void){
    if (T0IF){
        PORTE= !PORTE;
        TMR0=_tmr0_value;
        T0IF=0;
    }
}

void setup (void);
void main(void) {
    setup();
    while (1){
        ADCON0bits.GO=1;
        while (ADIF==0);
        int adc=(ADRESH<<8)+ADRESL;
        PORTB=(char)(adc>>2);
        __delay_ms(10);
    }
    return;
}
void setup (void){
    ANSEL=0;
    ANSELH=0;
    TRISE=0;
    //TRISC=0;
    //TRISD=0;
    TRISB=0;
    
    OSCCONbits.IRCF=0b111; //8MHz
    OSCCONbits.SCS=1;
    
    //Configuracion TMR0
    OPTION_REGbits.T0CS=0;
    OPTION_REGbits.PSA=0;
    OPTION_REGbits.PS=0b111;
    TMR0 = _tmr0_value;
    
    
    //Configuracion de interrupcion TMR0
    INTCONbits.T0IF =0;
    INTCONbits.T0IE=1;
    //INTCONbits.PEIE=0;
    INTCONbits.GIE=1;
    
    //config ADC
    ANSEL=0b01;
    TRISA=0b01;
    ADCON0bits.ADCS=0b10;
    ADCON0bits.CHS= 0;
    __delay_ms(1);
    ADCON1bits.ADFM=1;
    ADCON1bits.VCFG0=0;
    ADCON1bits.VCFG1=0;
    ADCON0bits.ADON=1;
    ADIF=0;
    
}
